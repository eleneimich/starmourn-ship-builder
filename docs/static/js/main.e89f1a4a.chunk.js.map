{"version":3,"sources":["Forge.js","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["parseKilo","value","endsWith","Math","round","parseFloat","substr","length","SUPERSTRUCTURES","split","map","line","elements","id","make","model","ss_type","size","parseInt","mass","strength","turn_time","power","capacity","refit_capacity","weapons","small","medium","large","points","modules","price","MODULES","toLowerCase","size_points","name","description","effect","cycles","WEAPONS","weapon_type","firing_speed","reload_speed","weapon_damage","dps","optimal_range","fall_off","CAPACITORS","kear","ENGINES","thrust","SHIELDS","recharge_time","resistances","kinetic","thermal","EM","SENSORS","SHIPSIMS","getComponent","superstructureId","masterList","componentId","find","ss","sublist","filter","component","sort","a","b","getModulesFromList","moduleIds","i","module","push","getModules","getWeapons","getPointsUsed","selected","reduce","acc","isEnabled","disabled","sumPower","weapon","sumCycles","sumPrice","item","sumDps","Superstructure","className","Capacitor","Engine","Sensor","Shipsim","Shield","SHIP_DEFAULT","Interceptor","Corvette","Destroyer","Cruiser","Battleship","Freighter","Superhauler","Label","text","SuperstructureSelection","ssType","setSsType","setSelected","defaultValue","onChange","evt","target","ComponentSelection","comp_name","comp_type","ActivatedCheck","setValue","type","checked","AmmoCheck","onClick","ModuleSelection","ammo","activated","ModuleList","pointsUsed","setModule","idx","updated","splice","list","key","ModulesSelection","superstructure","counts","ShipDisplay","capacitor","engine","shield","shipsim","sensor","weaponPoints","modulePoints","massUsed","thrustRatio","weaponsEnabled","modulesEnabled","maxPower","weaponPower","modulePower","powerLeft","maxCycles","cyclesLeft","totalPrice","overModules","overWeapons","shipStats","App","useState","setSuperstructure","setCapacitor","setEngine","setShield","setShipsim","setSensor","setModules","setWeapons","ship","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e89f1a4a.chunk.js","sourcesContent":["const SUPERSTRUCTURES_STRING = `20,Akari Yards,Corsair,Interceptor,7,1400,704,0.40s,2.60k,1.80k,2,1,0,0,1,0,0,17527\n21,Kurovani Defense,Assassin,Interceptor,10,1950,1.58k,0.65s,3.00k,1.58k,3,2,0,0,1,0,0,25039\n25,Tiravoa Shipworks,Defiant,Interceptor,13,2870,950,0.85s,3.30k,1.45k,3,3,0,0,0,0,0,32551\n24,Relian Shipyards,Squall,Interceptor,17,3650,1.75k,0.80s,3.30k,1.81k,4,1,1,0,1,0,0,42567\n6,Kurovani Defense,Stalker,Corvette,21,4170,2.14k,0.82s,12.50k,3.27k,5,2,1,0,2,1,0,52583\n5,Akari Yards,Marauder,Corvette,25,4870,2.32k,1.00s,13.00k,2.71k,6,1,0,1,1,2,0,62599\n9,Tiravoa Shipworks,Intrepid,Corvette,29,5550,3.22k,0.98s,13.00k,2.67k,6,2,2,0,2,1,0,72615\n7,Thill Conglomerate,Scimitar,Corvette,33,5770,2.81k,0.88s,12.80k,2.93k,7,1,2,0,3,2,0,82631\n8,Sinseel Systems,Sunderer,Corvette,38,7100,3.53k,1.15s,13.50k,2.19k,8,2,3,0,2,0,0,95151\n29,Tiravoa Shipworks,Venture,Freighter,55,6270,3.13k,2.28s,14.30k,17.70k,12,0,1,0,3,2,0,137718\n28,Sinseel Systems,Traveller,Freighter,57,6970,4.00k,2.00s,15.00k,16.80k,12,0,1,0,3,3,0,142726\n22,Wayland Astrotech,Constellation,Freighter,66,12300,5.97k,2.61s,15.00k,23.81k,14,0,1,0,3,2,1,165262\n19,Thill Conglomerate,Ouran,Freighter,74,14700,7.46k,2.57s,15.00k,25.29k,15,0,1,0,3,3,1,185294\n15,Akari Yards,Ravager,Destroyer,42,8250,4.36k,1.00s,23.50k,4.12k,9,4,1,1,2,1,1,105167\n18,Tiravoa Shipworks,Valor,Destroyer,46,9750,4.77k,1.10s,25.00k,4.64k,10,4,2,1,2,1,1,115183\n16,Kurovani Defense,Predator,Destroyer,50,11250,5.11k,1.12s,25.00k,5.56k,11,4,2,1,2,2,1,125198\n17,Relian Shipyards,Cyclone,Destroyer,56,13500,6.81k,1.40s,25.50k,6.27k,12,4,1,2,2,1,1,140222\n14,Thill Conglomerate,Battleaxe,Cruiser,61,15000,7.17k,1.79s,36.50k,10.58k,13,2,3,1,1,2,2,152742\n13,Wayland Astrotech,Nova,Cruiser,64,17250,8.75k,1.88s,38.00k,8.75k,13,2,2,2,1,2,2,160254\n12,Sinseel Systems,Conqueror,Cruiser,68,19500,10.20k,2.01s,38.00k,8.62k,14,2,3,2,1,2,2,170270\n11,Relian Shipyards,Hurricane,Cruiser,72,22500,11.30k,2.00s,40.00k,11.25k,15,2,3,3,1,2,1,180286\n10,Ixodon Industries,Twilight,Cruiser,77,27000,14.43k,2.40s,38.00k,9.45k,16,2,2,3,1,2,2,192806\n32,Sinseel Systems,Progenitor,Superhauler,115,56000,12.63k,5.41s,38.00k,50.78k,24,1,0,1,2,3,4,237565\n33,Ixodon Industries,Maw,Superhauler,110,64000,15.00k,5.00s,36.50k,46.91k,23,1,0,2,2,3,3,227236\n35,Wayland Astrotech,Galaxy,Superhauler,125,68200,14.17k,6.50s,37.00k,55.97k,26,1,0,0,2,4,5,258222\n4,Wayland Astrotech,Quasar,Battleship,83,34500,17.42k,3.50s,53.00k,15.87k,17,1,4,3,1,4,2,207830\n3,Sinseel Systems,Architect,Battleship,89,43500,21.53k,3.80s,57.00k,23.87k,18,1,2,4,1,3,2,222854\n2,Relian Shipyards,Typhoon,Battleship,94,49250,23.90k,4.00s,55.00k,17.86k,19,1,3,4,1,3,3,235374\n1,Ixodon Industries,Singularity,Battleship,99,63500,28.74k,4.32s,55.00k,15.49k,20,1,2,5,1,3,3,247894`;\n\nconst parseKilo = value => {\n\tif (value.endsWith('k')) {\n\t\treturn Math.round(1000 * parseFloat(value.substr(0, value.length - 1)));\n\t} else if (value.endsWith('s')) {\n\t\treturn parseFloat(value.substr(0, value.length - 1));\n\t} else if (value.endsWith('%')) {\n\t\treturn parseFloat(value.substr(0, value.length - 1)) / 100;\n\t}\n\treturn parseFloat(value);\n};\n\nconst superstructureFromLine = (line) => {\n\tconst elements = line.split(',');\n\treturn {\n\t\tid: elements[0],\n\t\tmake: elements[1],\n\t\tmodel: elements[2],\n\t\tss_type: elements[3],\n\t\tsize: parseInt(elements[4]),\n\t\tmass: parseInt(elements[5]),\n\t\tstrength: parseKilo(elements[6]),\n\t\tturn_time: parseKilo(elements[7]),\n\t\tpower: parseKilo(elements[8]),\n\t\tcapacity: parseKilo(elements[9]),\n\t\trefit_capacity: parseInt(elements[10]),\n\t\tweapons: {\n\t\t\tsmall: parseInt(elements[11]),\n\t\t\tmedium: parseInt(elements[12]),\n\t\t\tlarge: parseInt(elements[13]),\n\t\t\tpoints: parseInt(elements[11]) * 5 + parseInt(elements[12]) * 10 + parseInt(elements[13]) * 15\n\t\t},\n\t\tmodules: {\n\t\t\tsmall: parseInt(elements[14]),\n\t\t\tmedium: parseInt(elements[15]),\n\t\t\tlarge: parseInt(elements[16]),\n\t\t\tpoints: parseInt(elements[14]) * 5 + parseInt(elements[15]) * 10 + parseInt(elements[16]) * 15\n\t\t},\n\t\tprice: parseInt(elements[17]),\n\t};\n};\n\nexport const SUPERSTRUCTURES = SUPERSTRUCTURES_STRING.split('\\n').map(superstructureFromLine);\n\nconst MODULES_STRING = `23,Augmented Engine I,Small,Improved reverse thrust allows for faster stops.,0.50% augmented engines (faster SHIP HALT),0,100,0,25000\n39,Augmented Engine II,Medium,Improved reverse thrust allows for faster stops.,0.80% augmented engines (faster SHIP HALT),0,300,0,45000\n40,Augmented Engine III,Large,Improved reverse thrust allows for faster stops.,1.20% augmented engines (faster SHIP HALT),0,500,0,80000\n27,Cargo Hold I,Small,Improved cargo capacity allows for extra cargo space.,100 extra cargo space,0,100,0,50000\n41,Cargo Hold II,Medium,Improved cargo capacity allows for extra cargo space.,150 extra cargo space,0,300,0,75000\n42,Cargo Hold III,Large,Improved cargo capacity allows for extra cargo space.,200 extra cargo space,0,500,0,11000\n20,Damage Boost +20%,Small,Improves damage of a linked weapon by 20%.,20.00% damage,0,100,0,50000\n26,Refitter,Medium,Increase ship refit capacity.,2 extra refit space,0,200,0,50000`;\n\nconst moduleFromLine = (line) => {\n\tconst elements = line.split(',');\n\tconst size = elements[2].toLowerCase();\n\tlet size_points = 5;\n\tif (size === \"medium\") {\n\t\tsize_points = 10;\n\t} else if (size === \"large\") {\n\t\tsize_points = 15;\n\t}\n\treturn {\n\t\tid: elements[0],\n\t\tname: elements[1],\n\t\tsize: elements[2].toLowerCase(),\n\t\tsize_points,\n\t\tdescription: elements[3],\n\t\teffect: elements[4],\n\t\tmass: parseKilo(elements[5]),\n\t\tpower: parseKilo(elements[6]),\n\t\tcycles: parseKilo(elements[7]),\n\t\tprice: parseInt(elements[8]),\n\t};\n};\n\nexport const MODULES = MODULES_STRING.split('\\n').map(moduleFromLine);\n\nconst WEAPONS_STRING = `4,Cannon I,Small,Batters other ships with a blast of energy.,Cannon,1.5,3,400,6,15%,0,100,1.00k,3000\n5,Cannon II,Medium,Batters other ships with an intense blast of energy.,Cannon,1.5,4,750,6,15%,0,300,2.50k,7500\n6,Cannon III,Medium,Batters other ships with an overwhelming blast of energy.,Cannon,1.5,6,900,6,15%,0,300,2.50k,15000\n32,Massive Cannon I,Medium,Batters other ships with a blast of energy.,Cannon,1.5,5,1.10k,7,15%,0,300,2.50k,10000\n33,Massive Cannon II,Large,Batters other ships with an intense blast of energy.,Cannon,1.5,7,1.75k,7,15%,0,500,5.00k,15000\n34,Massive Cannon III,Large,Batters other ships with an overwhelming blast of energy.,Cannon,1.5,9,2.00k,7,15%,0,500,5.00k,30000\n7,Targeted Missile I,Medium,Launch missiles at your foes.,Missile,2.5,2.5,1.80k,8,7%,0,300,2.50k,10000\n35,Targeted Missile II,Large,Fire larger and more powerful missiles.,Missile,2.5,3,2.60k,8,7%,0,500,5.00k,15000\n36,Targeted Missile III,Large,Fire the most powerful missiles.,Missile,2.5,3,3.00k,8,7%,0,500,5.00k,30000\n30,Mine Layer I,Medium,Lay mines behind your ship.,Mine,12,0,2.50k,5,50%,0,300,2.50k,15000\n37,Mine Layer II,Large,Lay mines behind your ship.,Mine,12,0,3.50k,5,50%,0,500,5.00k,30000\n38,Mine Layer III,Large,Lay mines behind your ship.,Mine,12,0,4.00k,5,50%,0,500,5.00k,45000\n31,Mine Destroyer,Medium,Destroys mines in your targeting cone.,Antimine,6,0,1,5,50%,0,300,2.50k,15000\n29,Interdictor Beam,Large,Stops movement.,Interdictor,8,0,1.50k,8,30%,0,500,5.00k,15000\n21,Tractor Beam,Medium,Stops asteroids.,Tractor,8,0,1.50k,8,30%,0,300,2.50k,6000`;\n\nconst weaponFromLine = (line) => {\n\tconst elements = line.split(',');\n\tconst weapon_type = elements[4];\n\tconst firing_speed = parseKilo(elements[5]);\n\tconst reload_speed = parseKilo(elements[6]);\n\tconst weapon_damage = parseKilo(elements[7]);\n\tlet dps = 0;\n\tif (weapon_type === 'Missile') {\n\t\tdps = weapon_damage / reload_speed;\n\t} else if (weapon_type === 'Cannon') {\n\t\tdps = weapon_damage / firing_speed;\n\t}\n\tconst size = elements[2].toLowerCase();\n\tlet size_points = 5;\n\tif (size === \"medium\") {\n\t\tsize_points = 10;\n\t} else if (size === \"large\") {\n\t\tsize_points = 15;\n\t}\n\treturn {\n\t\tid: elements[0],\n\t\tname: elements[1],\n\t\tsize,\n\t\tsize_points,\n\t\tdescription: elements[3],\n\t\tweapon_type,\n\t\tfiring_speed,\n\t\treload_speed,\n\t\tweapon_damage,\n\t\toptimal_range: parseInt(elements[8]),\n\t\tdps,\n\t\tfall_off: parseKilo(elements[9]),\n\t\tmass: parseKilo(elements[10]),\n\t\tpower: parseKilo(elements[11]),\n\t\tcycles: parseKilo(elements[12]),\n\t\tprice: parseInt(elements[13]),\n\t};\n};\n\nexport const WEAPONS = WEAPONS_STRING.split('\\n').map(weaponFromLine);\n\nconst CAPACITORS_STRING = `1,Relian Shipyards,R1000,Interceptor,375,1500,300,962\n2,Nakamura Syndicate,SC125,Interceptor,425,1750,400,1302\n3,Tiravoa Shipworks,CP7,Interceptor,300,1300,250,516\n4,Osesk Lines,D65-25,Corvette,1500,5000,1300,2889\n5,Sunwide Omnitech,MP30,Corvette,1800,6000,1500,3872\n6,Nakamura Syndicate,SC1800,Corvette,1200,4500,1100,1628\n15,Coreward Group,LP30-TR,Freighter,1800,3000,1500,3872\n7,Tiravoa Shipworks,CP45,Destroyer,2700,9000,2500,6750\n8,Warpring Enterprises,Enercell 55,Destroyer,3500,11000,2800,9527\n9,Osesk Lines,D43-350,Destroyer,2200,7000,2200,4352\n10,Nakamura Syndicate,SC5000,Destroyer,2800,9000,2600,8171\n11,Sunwide Omnitech,MP2000,Cruiser,5250,13000,3800,11423\n12,Warpring Enterprises,Enercell 75,Cruiser,5250,15000,4200,14465\n13,Thill Conglomerate,Epsilon 5500,Cruiser,5250,12500,3400,8646\n14,Sunwide Omnitech,MP6700,Cruiser,5250,13400,4000,11829\n16,Warpring Enterprises,Enercell S,Superhauler,9000,6000,3700,9863\n17,Thill Conglomerate,Sigma 9000,Battleship,9000,18000,5500,18203\n18,Coreward Group,LP11-QV,Battleship,10000,22000,6000,26035\n19,Nakamura Syndicate,SC7000,Battleship,8000,16000,5000,11549\n20,Thill Conglomerate,Omega 9500,Battleship,9200,19000,5700,19923`;\n\nconst capacitorFromLine = (line) => {\n\tconst elements = line.split(',');\n\treturn {\n\t\tid: elements[0],\n\t\tmake: elements[1],\n\t\tmodel: elements[2],\n\t\tss_type: elements[3],\n\t\tmass: parseKilo(elements[4]),\n\t\tkear: parseKilo(elements[5]),\n\t\tpower: parseKilo(elements[6]),\n\t\tprice: parseInt(elements[7]),\n\t};\n};\n\nexport const CAPACITORS = CAPACITORS_STRING.split('\\n').map(capacitorFromLine);\n\nconst ENGINES_STRING = `23,Ostarian Designs,Gamma 50,Interceptor,380,1900,500,3228\n22,Ostarian Designs,Gamma 35,Interceptor,350,1950,520,3335\n1,Ostarian Designs,Fusion 25,Interceptor,500,2250,600,4133\n2,Wayland Astrotech,F35-AST,Interceptor,520,2280,620,4175\n54,Coreward Group,CGGR-525,Interceptor,400,2400,650,4518\n41,Tiravoa Shipworks,TA-210,Interceptor,650,2530,750,4674\n25,Wayland Astrotech,G115-AST,Corvette,1580,4900,2150,10356\n24,Sinseel Systems,SSG85,Corvette,1600,4950,2200,10447\n3,Ostarian Designs,Fusion 50,Corvette,2000,5550,2600,12081\n4,Tiravoa Shipworks,T-80,Corvette,2050,5600,2550,12420\n55,Wrega Gravitics,WG-600G,Corvette,1750,5750,2800,12496\n42,Sunwide Omnitech,L-Drive 265,Corvette,2500,6050,3000,13365\n11,Ostarian Designs,Fusion 480,Freighter,2400,8500,3000,26381\n12,Sunwide Omnitech,Flare 600,Freighter,2450,8530,2950,26792\n32,Sinseel Systems,SSG670,Freighter,2000,8200,2500,26896\n46,Sunwide Omnitech,L-Drive 600,Freighter,2750,8850,3400,26864\n33,Osesk Lines,LMG4800,Freighter,2050,8150,2450,26838\n59,Coreward Group,CGGR-1225,Freighter,2150,8650,3200,26453\n6,Sinseel Systems,SSF140,Destroyer,3650,8300,4950,19583\n26,Ostarian Designs,Gamma 150,Destroyer,3100,7650,4400,17645\n27,Sunwide Omnitech,Gburst 210,Destroyer,3000,7600,4350,17515\n43,Osesk Lines,LMA4300,Destroyer,4200,8700,6600,18633\n56,Wayland Astrotech,GR735-AST,Destroyer,3250,8500,5400,19663\n5,Ostarian Designs,Fusion 100,Destroyer,3600,8250,5000,19250\n7,Sunwide Omnitech,Flare 175,Cruiser,7000,11750,7900,31066\n8,Osesk Lines,LMF4230,Cruiser,7080,11850,7850,31698\n28,Sinseel Systems,SSG260,Cruiser,6200,10750,6800,28028\n29,Wayland Astrotech,G325-AST,Cruiser,6300,10900,6900,28606\n44,Tiravoa Shipworks,TA-375,Cruiser,8000,12500,8650,33600\n57,Wrega Gravitics,WG-860G,Cruiser,6500,12100,8600,31575\n13,Wayland Astrotech,F735-AST,Superhauler,12000,17000,7400,67191\n14,Sinseel Systems,SSF840,Superhauler,12100,17100,7350,68214\n34,Wayland Astrotech,G975-AST,Superhauler,10000,16000,7000,61195\n35,Sunwide Omnitech,G-burst 1100,Superhauler,9900,16100,7030,61830\n47,Wrega Gravitics,WG-750A,Superhauler,13000,17600,7700,70600\n60,Wrega Gravitics,WG-1540G,Superhauler,10500,17350,7500,69518\n9,Wayland Astrotech,F300-AST,Battleship,12000,16000,11000,48817\n10,Sinseel Systems,SSF380,Battleship,12100,16050,10950,49234\n30,Ostarian Designs,Gamma 450,Battleship,10500,14800,9500,44946\n31,Sunwide Omnitech,G-burst 550,Battleship,10600,14950,9650,45503\n45,Wrega Gravitics,WG-465A,Battleship,13650,16800,12550,50387\n58,Wayland Astrotech,GR1015-AST,Battleship,11000,16450,11700,50034`;\n\nconst engineFromLine = (line) => {\n\tconst elements = line.split(',');\n\treturn {\n\t\tid: elements[0],\n\t\tmake: elements[1],\n\t\tmodel: elements[2],\n\t\tss_type: elements[3],\n\t\tmass: parseKilo(elements[4]),\n\t\tthrust: parseKilo(elements[5]),\n\t\tpower: parseKilo(elements[6]),\n\t\tprice: parseInt(elements[7]),\n\t};\n};\n\nexport const ENGINES = ENGINES_STRING.split('\\n').map(engineFromLine);\n\n\nconst SHIELDS_STRING = `1,Nebulan Yards,Sentinel 20,Interceptor,500,2000,18,600,816,0.00%,0.00%,0.00%\n3,Relian Shipyards,Fortress 22,Interceptor,500,2200,17,600,987,-10.00%,10.00%,0.00%\n2,Warpring Enterprises,Bulwark 25,Interceptor,550,2500,18,800,1104,0.00%,0.00%,0.00%\n4,Nebulan Yards,Sentinel 35,Corvette,2000,3500,18,2600,1201,0.00%,0.00%,0.00%\n5,Ixodon Industries,Aegis 137,Corvette,2000,3700,17,2650,1329,-10.00%,10.00%,0.00%\n6,Warpring Enterprises,Bulwark 42,Corvette,2400,4200,18,3200,1559,0.00%,0.00%,10.00%\n15,Relian Shipyards,Fortress F,Freighter,12000,8500,18,3000,6595,0.00%,0.00%,0.00%\n16,Ixodon Industries,Aegis F,Freighter,14000,10000,18,3500,8451,0.00%,0.00%,0.00%\n10,Warpring Enterprises,Bulwark 500,Destroyer,4000,5000,13,3500,2112,0.00%,0.00%,0.00%\n8,Nebulan Yards,Sentinel 600,Destroyer,3200,6000,18,4500,2683,-15.00%,-15.00%,0.00%\n7,Akari Yards,Defender 700,Destroyer,3600,7000,18,5000,3464,0.00%,0.00%,0.00%\n9,Relian Shipyards,Fortress 800,Destroyer,3500,8000,18,6500,3969,0.00%,0.00%,0.00%\n12,Akari Yards,Defender 15K,Cruiser,6000,15000,18,6500,13953,0.00%,0.00%,0.00%\n14,Warpring Enterprises,Bulwark 16K,Cruiser,7000,16500,15,7600,15614,0.00%,0.00%,0.00%\n11,Ixodon Industries,Aegis 16K,Cruiser,7000,16500,18,7600,15614,-10.00%,10.00%,0.00%\n13,Nebulan Yards,Sentinel 18K,Cruiser,7500,18500,18,8500,18561,0.00%,0.00%,0.00%\n17,Nebulan Yards,Sentinel SH,Superhauler,12000,26000,18,7400,39291,0.00%,0.00%,0.00%\n20,Relian Shipyards,Fortress 30K,Battleship,10000,30000,16,9500,46169,0.00%,0.00%,0.00%\n19,Akari Yards,Defender 38K,Battleship,12000,38000,18,11000,68839,0.00%,0.00%,0.00%\n21,Ixodon Industries,Aegis 38K,Battleship,12000,38500,18,11000,70663,-15.00%,15.00%,0.00%\n18,Warpring Enterprises,Bulwark 42K,Battleship,14000,42000,21,12500,78888,0.00%,0.00%,10.00%`;\n\nconst shieldFromLine = (line) => {\n\tconst elements = line.split(',');\n\treturn {\n\t\tid: elements[0],\n\t\tmake: elements[1],\n\t\tmodel: elements[2],\n\t\tss_type: elements[3],\n\t\tmass: parseKilo(elements[4]),\n\t\tstrength: parseKilo(elements[5]),\n\t\trecharge_time: parseKilo(elements[6]),\n\t\tpower: parseKilo(elements[7]),\n\t\tprice: parseInt(elements[8]),\n\t\tresistances: {\n\t\t\tkinetic: parseKilo(elements[9]),\n\t\t\tthermal: parseKilo(elements[10]),\n\t\t\tEM: parseKilo(elements[11]),\n\t\t},\n\t};\n};\n\nexport const SHIELDS = SHIELDS_STRING.split('\\n').map(shieldFromLine);\n\nconst SENSORS_STRING = `1,Coreward Group,Core15,Interceptor,125,12,600,1837\n2,Artekeera Detection,SG1,Interceptor,150,18,750,2957\n3,Osesk Lines,45Q-D3,Corvette,500,13,2600,3824\n4,Artekeera Detection,SG3,Corvette,600,21,2900,7019\n9,Coreward Group,Core300,Freighter,600,10,3000,3286\n6,Aphador Cooperative,APH55,Destroyer,1150,22,5500,10234\n5,Coreward Group,Core85,Destroyer,900,14,5000,5345\n7,Osesk Lines,55Q-I3,Cruiser,1750,16,7600,9635\n8,Artekeera Detection,SG6,Cruiser,1950,22,8200,14212\n10,Ixodon Industries,Revealer,Superhauler,3000,10,7400,10462\n11,Aphador Cooperative,APH750,Superhauler,3500,14,7800,16644\n12,Ixodon Industries,Voidfinder,Battleship,3000,16,11000,13729\n13,Artekeera Detection,SG10,Battleship,3600,22,11750,21919`;\n\nconst sensorFromLine = (line) => {\n\tconst elements = line.split(',');\n\treturn {\n\t\tid: elements[0],\n\t\tmake: elements[1],\n\t\tmodel: elements[2],\n\t\tss_type: elements[3],\n\t\tmass: parseKilo(elements[4]),\n\t\tstrength: parseInt(elements[5]),\n\t\tpower: parseKilo(elements[6]),\n\t\tprice: parseInt(elements[7]),\n\t};\n};\n\nexport const SENSORS = SENSORS_STRING.split('\\n').map(sensorFromLine);\n\nconst SHIPSIMS_STRING = `3,Aphador Cooperative,MPL10,Interceptor,220,1000,400,500\n1,Nebulan Yards,NY20,Interceptor,250,2000,600,1632\n2,Bor Rai Cognition,BRC35,Interceptor,280,3500,900,4083\n6,Aphador Cooperative,MP60,Corvette,850,6000,2200,7675\n4,Sinseel Systems,SS70,Corvette,1000,7000,2600,9609\n5,Nebulan Yards,NY95,Corvette,1200,9500,2900,16759\n18,Aphador Cooperative,MPL-F,Freighter,1200,2500,3000,1141\n9,Sinseel Systems,SS115,Destroyer,1600,11500,4500,19714\n7,Bor Rai Cognition,BRC140,Destroyer,1800,14000,5000,27718\n8,Nebulan Yards,NY165,Destroyer,2000,16500,5400,37048\n12,Nebulan Yards,NY1150,Cruiser,3200,17000,7000,34542\n13,Aphador Cooperative,MPL1400,Cruiser,3500,19500,6500,47164\n10,Aphador Cooperative,MPL700,Cruiser,3500,19500,7600,43617\n11,Bor Rai Cognition,BRC900,Cruiser,4000,24500,8000,67109\n19,Nyaza Char'nae,NCN-S,Superhauler,6000,6000,7400,4184\n14,Nyaza Char'nae,NCN1700,Battleship,6000,28500,11000,77444\n15,Sinseel Systems,SS2100,Battleship,7000,31000,11500,89613\n16,Nyaza Char'nae,NCN2500,Battleship,5500,26000,10500,65970\n17,Bor Rai Cognition,BRC3000,Battleship,6000,28500,10000,81225`;\n\nconst shipsimFromLine = (line) => {\n\tconst elements = line.split(',');\n\treturn {\n\t\tid: elements[0],\n\t\tmake: elements[1],\n\t\tmodel: elements[2],\n\t\tss_type: elements[3],\n\t\tmass: parseKilo(elements[4]),\n\t\tcycles: parseKilo(elements[5]),\n\t\tpower: parseKilo(elements[6]),\n\t\tprice: parseInt(elements[7]),\n\t};\n};\n\nexport const SHIPSIMS = SHIPSIMS_STRING.split('\\n').map(shipsimFromLine);\n\nexport const getComponent = (superstructureId, masterList, componentId) => {\n\tconst ss_type = SUPERSTRUCTURES.find(ss => ss.id === superstructureId).ss_type;\n\tconst sublist = masterList\n\t\t.filter(component => component.ss_type === ss_type);\n\tsublist.sort((a, b) => a.price - b.price);\n\tlet value = componentId;\n\tif (!sublist.find(component => component.id === componentId)) {\n\t\tvalue = sublist[0].id;\n\t}\n\treturn masterList.find(component => component.id === value);\n};\n\nconst getModulesFromList = (masterList, moduleIds) => {\n\tconst modules = [];\n\tfor (let i = 0; i < moduleIds.length; i++) {\n\t\tif (moduleIds[i] && moduleIds[i].id) {\n\t\t\tconst module = masterList.find(module => module.id === moduleIds[i].id);\n\t\t\tmodules.push({\n\t\t\t\t...moduleIds[i],\n\t\t\t\t...module,\n\t\t\t});\n\t\t}\n\t}\n\treturn modules;\n};\n\nexport const getModules = (superstructureId, moduleIds) => {\n\tconst superstructure = getComponent(superstructureId, SUPERSTRUCTURES, superstructureId);\n\treturn getModulesFromList(MODULES, moduleIds);\n};\n\nexport const getWeapons = (superstructureId, moduleIds) => {\n\tconst superstructure = getComponent(superstructureId, SUPERSTRUCTURES, superstructureId);\n\treturn getModulesFromList(WEAPONS, moduleIds);\n};\n\nexport const getPointsUsed = (selected, masterList) =>\n\tselected.reduce((acc, { id }) => acc + masterList.find(module => module.id === id).size_points, 0);;\n\nconst isEnabled = ({ disabled }) => !disabled;\nconst sumPower = (acc, weapon) => acc + weapon.power;\nconst sumCycles = (acc, weapon) => acc + weapon.cycles;\nconst sumPrice = (acc, item) => acc + item.price;\nconst sumDps = (acc, item) => acc + item.dps;\n\nexport const shipStats = ({ superstructure, capacitor, shield, sensor, engine, shipsim, weapons, modules, weaponPoints, modulePoints }) => {\n\tconst massUsed = superstructure.mass + capacitor.mass + shield.mass + sensor.mass + engine.mass + shipsim.mass;\n\n\tconst thrustRatio = engine.thrust / massUsed;\n\n\tconst weaponsEnabled = weapons.filter(isEnabled);\n\tconst modulesEnabled = modules.filter(isEnabled);\n\n\tconst maxPower = superstructure.power;\n\tconst weaponPower = weaponsEnabled.reduce(sumPower, 0);\n\tconst modulePower = modulesEnabled.reduce(sumPower, 0);\n\tconst dps = weaponsEnabled.reduce(sumDps, 0);\n\n\tconst powerUsed = capacitor.power + shield.power + sensor.power + engine.power + shipsim.power + weaponPower + modulePower;\n\tconst powerLeft = maxPower - powerUsed;\n\n\tconst maxCycles = shipsim.cycles;\n\tconst weaponCycles = weaponsEnabled.reduce(sumCycles, 0);\n\tconst moduleCycles = modulesEnabled.reduce(sumCycles, 0);\n\tconst cyclesLeft = maxCycles - weaponCycles - moduleCycles;\n\n\tconst totalPrice = [\n\t\tsuperstructure,\n\t\tcapacitor,\n\t\tshield,\n\t\tsensor,\n\t\tengine,\n\t\tshipsim,\n\t\t...weapons,\n\t\t...modules,\n\t].reduce(sumPrice, 0);\n\n\treturn {\n\t\tmassUsed,\n\t\tmaxPower,\n\t\tpowerLeft,\n\t\tdps,\n\t\tthrustRatio,\n\t\tmaxCycles,\n\t\tcyclesLeft,\n\t\ttotalPrice,\n\t\toverModules: modulePoints > superstructure.modules.points,\n\t\toverWeapons: weaponPoints > superstructure.weapons.points,\n\t};\n};\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { SUPERSTRUCTURES, CAPACITORS, ENGINES, SHIELDS, SHIPSIMS, SENSORS, WEAPONS, MODULES, getComponent, getModules, getWeapons, getPointsUsed, shipStats } from './Forge';\n\nconst Superstructure = ({ id, make, model, ss_type }) => {\n\treturn (\n\t\t<option className=\"superstructure\" value={id}>\n\t\t\t{ss_type} {id} {make} {model}\n\t\t</option>\n\t);\n};\n\nconst Capacitor = ({ id, mass, power, kear }) => {\n\treturn (\n\t\t<option className=\"capacitor\" value={id}>\n\t\t\t{id} - {kear} Kear - {mass}t/{power}h\n\t\t</option>\n\t);\n};\n\nconst Engine = ({ id, mass, power, thrust }) => {\n\treturn (\n\t\t<option className=\"engine\" value={id}>\n\t\t\t{id} - {thrust}h Thrust - {mass}t/{power}h\n\t\t</option>\n\t);\n};\n\nconst Sensor = ({ id, mass, power, strength }) => {\n\treturn (\n\t\t<option className=\"sensor\" value={id}>\n\t\t\t{id} - {strength} - {mass}t/{power}h\n\t\t</option>\n\t);\n};\n\nconst Shipsim = ({ id, mass, power, cycles }) => {\n\treturn (\n\t\t<option className=\"shipsim\" value={id}>\n\t\t\t{id} - {cycles} - {mass}t/{power}h\n\t\t</option>\n\t);\n};\n\nconst Shield = ({ id, mass, power, strength, recharge_time }) => {\n\treturn (\n\t\t<option className=\"shield\" value={id}>\n\t\t\t{id} - {strength}@{recharge_time} - {mass}t/{power}h\n\t\t</option>\n\t);\n};\n\nconst SHIP_DEFAULT = {\n\tInterceptor: '20',\n\tCorvette: '6',\n\tDestroyer: '15',\n\tCruiser: '14',\n\tBattleship: '4',\n\tFreighter: '29',\n\tSuperhauler: '32',\n};\n\nconst Label = ({ text }) => (<span className=\"label\">{text}:</span>);\n\nconst SuperstructureSelection = ({ ssType, setSsType, selected, setSelected }) => {\n\tconst sublist = SUPERSTRUCTURES.filter(ss => ss.ss_type === ssType);\n\treturn (\n\t\t<div className=\"superstructures\">\n\t\t\t<Label text=\"Class\" />\n\t\t\t<select className=\"superstructures__class\" defaultValue={ssType} onChange={(evt) => setSsType(evt.target.value) || setSelected(SHIP_DEFAULT[evt.target.value])} >\n\t\t\t\t<option value=\"Interceptor\">Interceptor</option>\n\t\t\t\t<option value=\"Corvette\">Corvette</option>\n\t\t\t\t<option value=\"Destroyer\">Destroyer</option>\n\t\t\t\t<option value=\"Cruiser\">Cruiser</option>\n\t\t\t\t<option value=\"Battleship\">Battleship</option>\n\t\t\t\t<option value=\"Freighter\">Freighter</option>\n\t\t\t\t<option value=\"Superhauler\">Superhauler</option>\n\t\t\t</select>\n\t\t\t<Label text=\"Model\" />\n\t\t\t<select className=\"superstructures__model\" defaultValue={selected} onChange={(evt) => setSelected(evt.target.value)} >\n\t\t\t\t{sublist.map(Superstructure)}\n\t\t\t</select>\n\t\t</div>\n\t);\n};\n\nconst ComponentSelection = ({ selected, setSelected, masterList, ss_type, comp_name, comp_type }) => {\n\tconst sublist = masterList\n\t\t.filter(component => component.ss_type === ss_type);\n\tsublist.sort((a, b) => a.price - b.price);\n\tlet value = selected;\n\tif (!sublist.find(component => component.id === selected)) {\n\t\tvalue = sublist[0].id;\n\t}\n\treturn (\n\t\t<div className={comp_name}>\n\t\t\t<Label text={comp_name} />\n\t\t\t<select className={`${comp_name}__select`} defaultValue={value} onChange={(evt) => setSelected(evt.target.value)}>\n\t\t\t\t{sublist.map(comp_type)}\n\t\t\t</select>\n\t\t</div>\n\t);\n};\n\nconst ActivatedCheck = ({ value, setValue }) => {\n\treturn (<input type=\"checkbox\" checked={value} onChange={(evt) => setValue(evt.target.checked)} />);\n};\n\nconst AmmoCheck = ({ value, setValue }) => {\n\treturn (<div className={`ammo_${value}`} onClick={() => {\n\t\tif (value === 'kinetic') {\n\t\t\tsetValue('em');\n\t\t} else if (value === 'em') {\n\t\t\tsetValue('thermal');\n\t\t} else if (value === 'thermal') {\n\t\t\tsetValue('gravitic');\n\t\t} else {\n\t\t\tsetValue('kinetic');\n\t\t}\n\t}} />);\n};\n\nconst ModuleSelection = ({ selected, setSelected, masterList, weapon }) => {\n\tconst sublist = [...masterList];\n\tsublist.sort((a, b) => {\n\t\tif (a.size_points > b.size_points) {\n\t\t\treturn 1;\n\t\t} else if (a.size_points < b.size_points) {\n\t\t\treturn -1;\n\t\t} else if (a.price > b.price) {\n\t\t\treturn 1;\n\t\t} else if (a.price < b.price) {\n\t\t\treturn -1;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t});\n\treturn (\n\t\t<div>\n\t\t\t<select value={selected && selected.id} onChange={(evt) => setSelected({\n\t\t\t\tid: evt.target.value,\n\t\t\t\tdisabled: (selected && selected.disabled) || false,\n\t\t\t\tammo: (selected && selected.ammo) || 'kinetic',\n\t\t\t})}>\n\t\t\t\t<option value=\"\">None</option>\n\t\t\t\t{sublist.map(module => (<option value={module.id}>\n\t\t\t\t\t({module.size_points}) {module.id} - {module.name}\n\t\t\t\t</option>))}\n\t\t\t</select>\n\t\t\t{weapon && selected && selected.id && <ActivatedCheck value={!selected.disabled} setValue={activated => setSelected({\n\t\t\t\t...selected,\n\t\t\t\tdisabled: !activated,\n\t\t\t})} />}\n\t\t\t{weapon && selected && selected.id && <AmmoCheck value={selected.ammo} setValue={ammo => setSelected({\n\t\t\t\t...selected,\n\t\t\t\tammo,\n\t\t\t})} />}\n\t\t</div>\n\t);\n};\n\nconst ModuleList = ({ selected, setSelected, masterList, points, pointsUsed, name }) => {\n\tconst setModule = (idx) => ({ id, disabled, ammo }) => {\n\t\tconst updated = [\n\t\t\t...selected,\n\t\t];\n\t\tif (id) {\n\t\t\tupdated[idx] = {\n\t\t\t\tid,\n\t\t\t\tdisabled,\n\t\t\t\tammo,\n\t\t\t};\n\t\t} else {\n\t\t\tupdated.splice(idx, 1);\n\t\t}\n\t\tsetSelected(updated);\n\t};\n\tconst list = [];\n\tfor (let i = 0; i < selected.length + 1; i++) {\n\t\tlist.push({\n\t\t\tselected: selected[i],\n\t\t\tsetSelected: setModule(i),\n\t\t\tmasterList,\n\t\t\tweapon: name === 'weapons',\n\t\t});\n\t}\n\treturn (<div className={`${name}`}>\n\t\t{list.map((item, idx) => (<ModuleSelection\n\t\t\t{...item}\n\t\t\tkey={`${item.selected && item.selected.id}_${idx}`}\n\t\t/>))}\n\t</div>);\n};\n\nconst ModulesSelection = ({ selected, setSelected, masterList, superstructure, name }) => {\n\tconst counts = getComponent(superstructure, SUPERSTRUCTURES, superstructure)[name];\n\tconst pointsUsed = getPointsUsed(selected, masterList);\n\treturn (\n\t\t<div className={name}>\n\t\t\t<Label text={`${name}: ${pointsUsed}/${counts.points}`} />\n\t\t\t<ModuleList selected={selected} setSelected={setSelected} masterList={masterList.filter(({ size_points }) => size_points <= counts.points)} points={counts.points} pointsUsed={pointsUsed} name={name} />\n\t\t</div>\n\t);\n};\n\nconst ShipDisplay = ({ superstructure, capacitor, engine, shield, shipsim, sensor, weapons, modules }) => {\n\tconst ship = {\n\t\tsuperstructure: getComponent(superstructure, SUPERSTRUCTURES, superstructure),\n\t\tcapacitor: getComponent(superstructure, CAPACITORS, capacitor),\n\t\tengine: getComponent(superstructure, ENGINES, engine),\n\t\tshield: getComponent(superstructure, SHIELDS, shield),\n\t\tshipsim: getComponent(superstructure, SHIPSIMS, shipsim),\n\t\tsensor: getComponent(superstructure, SENSORS, sensor),\n\t\tweapons: getWeapons(superstructure, weapons),\n\t\tmodules: getModules(superstructure, modules),\n\t\tweaponPoints: getPointsUsed(weapons, WEAPONS),\n\t\tmodulePoints: getPointsUsed(modules, MODULES),\n\t};\n\tconst { maxPower, massUsed, powerLeft, thrustRatio, cyclesLeft, maxCycles, dps, totalPrice, overModules, overWeapons } = shipStats(ship);\n\treturn (<div className=\"ship\">\n\t\t<span className=\"power\">Power: <span className=\"power_left\">{powerLeft}</span>/<span className=\"max_power\">{maxPower}</span></span>\n\t\t<span className=\"cycles\">Cycles: <span className=\"cycles_left\">{cyclesLeft}</span>/<span className=\"max_cycles\">{maxCycles}</span></span>\n\t\t<span className=\"dps\">DPS: <span className=\"dps\">{dps}</span></span>\n\t\t<span className=\"mass\">Mass: <span className=\"mass_used\">{massUsed}</span></span>\n\t\t<span className=\"thrust\">Thrust Over Mass: <span className=\"thrust_ratio\">{thrustRatio}</span></span>\n\t\t<span className=\"price\">Price: <span className=\"total_price\">{totalPrice}</span></span>\n\t\t{overModules && <span className=\"over_modules\">TOO MANY MODULES / MODULES TOO LARGE</span>}\n\t\t{overWeapons && <span className=\"over_weapons\">TOO MANY WEAPONS / WEAPONS TOO LARGE</span>}\n\t</div>);\n};\n\nfunction App() {\n\tconst [ssType, setSsType] = useState('Interceptor');\n\tconst [superstructure, setSuperstructure] = useState('20');\n\tconst [capacitor, setCapacitor] = useState();\n\tconst [engine, setEngine] = useState();\n\tconst [shield, setShield] = useState();\n\tconst [shipsim, setShipsim] = useState();\n\tconst [sensor, setSensor] = useState();\n\tconst [modules, setModules] = useState([]);\n\tconst [weapons, setWeapons] = useState([]);\n\tconst ship = {\n\t\tsuperstructure,\n\t\tcapacitor,\n\t\tengine,\n\t\tshield,\n\t\tshipsim,\n\t\tsensor,\n\t\tweapons,\n\t\tmodules,\n\t};\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<SuperstructureSelection ssType={ssType} setSsType={setSsType} selected={superstructure} setSelected={setSuperstructure} />\n\t\t\t<ComponentSelection selected={capacitor} setSelected={setCapacitor} masterList={CAPACITORS} ss_type={ssType} comp_name=\"capacitors\" comp_type={Capacitor} />\n\t\t\t<ComponentSelection selected={engine} setSelected={setEngine} masterList={ENGINES} ss_type={ssType} comp_name=\"engines\" comp_type={Engine} />\n\t\t\t<ComponentSelection selected={shield} setSelected={setShield} masterList={SHIELDS} ss_type={ssType} comp_name=\"shields\" comp_type={Shield} />\n\t\t\t<ComponentSelection selected={shipsim} setSelected={setShipsim} masterList={SHIPSIMS} ss_type={ssType} comp_name=\"shipsims\" comp_type={Shipsim} />\n\t\t\t<ComponentSelection selected={sensor} setSelected={setSensor} masterList={SENSORS} ss_type={ssType} comp_name=\"sensors\" comp_type={Sensor} />\n\t\t\t<ModulesSelection selected={modules} setSelected={setModules} superstructure={superstructure} masterList={MODULES} name=\"modules\" />\n\t\t\t<ModulesSelection selected={weapons} setSelected={setWeapons} superstructure={superstructure} masterList={WEAPONS} name=\"weapons\" />\n\t\t\t<ShipDisplay {...ship} />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}